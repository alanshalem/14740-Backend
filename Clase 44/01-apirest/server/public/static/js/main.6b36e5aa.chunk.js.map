{"version":3,"sources":["componentes/Noticia.js","generador.js","componentes/Noticias.js","App.js","index.js"],"names":["Noticia","props","noticia","marcarLeida","borrar","index","className","style","opacity","vista","src","imagen","width","borderRadius","alt","title","onClick","_id","titulo","cuerpo","autor","email","faker","locale","generarNoticia","hacker","phrase","lorem","paragraph","name","findName","image","avatar","internet","URL_NOTICIAS","Noticias","state","noticias","idObtenerNoticia","pedidas","a","body","query","variables","options","headers","axios","post","response","data","this","setState","console","error","noticiaIncorporada","guardarNoticia","push","noticiaActualizada","actualizarNoticia","log","find","noticiaBorrada","borrarNoticia","findIndex","splice","obtenerNoticias","value","onChange","e","target","placeholder","type","incorporarNoticia","length","map","actualizarComoLeida","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA8DeA,MA5Df,SAAiBC,GAAQ,IACjBC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,MACpC,OACE,qBAAKC,UAAU,UAAUC,MAAO,CAAEC,QAASN,EAAQO,MAAQ,MAAQ,KAAnE,SACE,sBAAKH,UAAU,iCAAf,UACE,qBACEI,IAAKR,EAAQS,OACbJ,MAAO,CAAEK,MAAO,QAASC,aAAc,QACvCC,IAAKZ,EAAQa,QAEf,sBAAKT,UAAU,kBAAf,UAIE,wBACEA,UAAU,8BACVU,QAAS,kBAAMb,EAAYD,EAAQe,MAFrC,SAIE,mBAAGX,UAAU,gBAAb,sBAMF,wBACEA,UAAU,4BACVU,QAAS,kBAAMZ,EAAOF,EAAQe,MAFhC,SAIE,mBAAGX,UAAU,mBAAb,uBAMF,oBAAIA,UAAU,yCAAd,SACE,8CAAiBD,EAAQ,OAE3B,uBACA,6BAAKH,EAAQgB,SACb,4BACE,4BAAIhB,EAAQiB,WAEd,4BACE,4BAAIjB,EAAQkB,UAEd,4BACE,4BACE,4BAAIlB,EAAQmB,YAGhB,8BACE,qCACA,4BAAInB,EAAQe,kB,wCCpDxBK,IAAMC,OAAS,KAEf,IASeC,EATQ,iBAAO,CAC5BN,OAAQI,IAAMG,OAAOC,SACrBP,OAAQG,IAAMK,MAAMC,YACpBR,MAAOE,IAAMO,KAAKC,WAClBnB,OAAQW,IAAMS,MAAMC,SACpBX,MAAOC,IAAMW,SAASZ,QACtBZ,OAAO,ICFHyB,EAEJ,aA+PaC,E,4MA5PbC,MAAQ,CACNC,SAAU,GACVC,iBAAkB,GAClBC,SAAS,G,8FAGX,sBAAAC,EAAA,0F,0HAOA,WAAsBvB,GAAtB,qBAAAuB,EAAA,sEAEQC,EAAO,CACTC,MAAM,kEAAD,OAEqBzB,EAAM,UAAYA,EAAM,KAAO,GAFpD,6RAYL0B,UAAW,IAETC,EAAU,CACZC,QAAS,CACP,eAAgB,qBAnBxB,SAsByBC,IAAMC,KAAKb,EAAcO,EAAMG,GAtBxD,OAsBQI,EAtBR,OAyBgBX,EAERW,EAHFC,KACEA,KAAQZ,SAGZa,KAAKC,SAAS,CAAEd,SAAUA,GAAsB,KA5BpD,kDA8BIe,QAAQC,MAAR,MACAH,KAAKC,SAAS,CAAEd,SAAU,KA/B9B,QAiCEa,KAAKC,SAAS,CAAEZ,SAAS,EAAMD,iBAAkB,KAjCnD,0D,6HAuCA,sCAAAE,EAAA,sEAEQtC,EAAUsB,IAEViB,EAAO,CACTC,MAAM,ylBAaNC,UAAWzC,GAET0C,EAAU,CACZC,QAAS,CACP,eAAgB,qBAtBxB,SAyByBC,IAAMC,KAAKb,EAAcO,EAAMG,GAzBxD,OAyBQI,EAzBR,OA4BgCM,EAExBN,EAHFC,KACEA,KAAQM,gBAKRlB,EAjCR,YAiCuBa,KAAKd,MAAMC,WACrBmB,KAAKF,GACdJ,KAAKC,SAAS,CAAEd,aAnCpB,kDAqCIe,QAAQC,MAAM,oBAAd,MArCJ,0D,8HA4CA,WAA0BpC,GAA1B,uBAAAuB,EAAA,sEAEQC,EAAO,CACTC,MAAM,sdAaNC,UAAW,CACT1B,IAAKA,EACLR,OAAO,IAGPmC,EAAU,CACZC,QAAS,CACP,eAAgB,qBAvBxB,SA0ByBC,IAAMC,KAAKb,EAAcO,EAAMG,GA1BxD,OA0BQI,EA1BR,OA6BmCS,EAE3BT,EAHFC,KACEA,KAAQS,kBAGZN,QAAQO,IAAIF,IAGRpB,EAnCR,YAmCuBa,KAAKd,MAAMC,WACrBuB,MAAK,SAAC1D,GAAD,OAAaA,EAAQe,MAAQA,KAAKR,OAAQ,EACxDyC,KAAKC,SAAS,CAAEd,aArCpB,kDAuCIe,QAAQC,MAAR,MAvCJ,0D,yHA8CA,WAAoBpC,GAApB,yBAAAuB,EAAA,sEAEQC,EAAO,CACTC,MAAM,8aAaNC,UAAW,CACT1B,IAAKA,IAGL2B,EAAU,CACZC,QAAS,CACP,eAAgB,qBAtBxB,SAyByBC,IAAMC,KAAKb,EAAcO,EAAMG,GAzBxD,OAyBQI,EAzBR,OA4B+Ba,EAEvBb,EAHFC,KACEA,KAAQa,cAGZV,QAAQO,IAAIE,GAGRxB,EAlCR,YAkCuBa,KAAKd,MAAMC,UAC1BhC,EAAQgC,EAAS0B,WAAU,SAAC7D,GAAD,OAAaA,EAAQe,MAAQA,KAC5DoB,EAAS2B,OAAO3D,EAAO,GACvB6C,KAAKC,SAAS,CAAEd,aArCpB,kDAuCIe,QAAQC,MAAM,gBAAd,MAvCJ,0D,2EA2CA,WAAU,IAAD,SACuCH,KAAKd,MAA7CC,EADC,EACDA,SAAUC,EADT,EACSA,iBAAkBC,EAD3B,EAC2BA,QAClC,OACE,qBAAKjC,UAAU,WAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,4DACA,uBAKA,wBACEA,UAAU,+BACVU,QAAS,kBAAM,EAAKiD,gBAAgB3B,IAFtC,SAIE,mBAAGhC,UAAU,kBAAb,wBAGF,uBACE4D,MAAO5B,EACPhC,UAAU,yCACV6D,SAAU,SAACC,GAAD,OACR,EAAKjB,SAAS,CAAEb,iBAAkB8B,EAAEC,OAAOH,SAE7CI,YAAY,wBACZC,KAAK,SAMP,wBACEjE,UAAU,mCACVU,QAAS,kBAAM,EAAKwD,qBAFtB,SAIE,mBAAGlE,UAAU,4BAAb,wBAGF,qBAAKA,UAAU,cAGb+B,EAASoC,QAAUlC,GACnB,oBAAIjC,UAAU,qBAAd,0CAMD+B,EAASqC,KAAI,SAACxE,EAASG,GACtB,OACE,cAAC,EAAD,CACEH,QAASA,EACTG,MAAOA,EACPF,YAAa,SAACc,GAAD,OAAS,EAAK0D,oBAAoB1D,IAC/Cb,OAAQ,SAACa,GAAD,OAAS,EAAK6C,cAAc7C,KAC/Bf,EAAQe,mB,GAlPR2D,IAAMC,WCDdC,MARf,WACE,OACE,qBAAKxE,UAAU,MAAf,SACE,cAAC,EAAD,OCDNyE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6b36e5aa.chunk.js","sourcesContent":["import \"./Noticia.css\";\n\nfunction Noticia(props) {\n  let { noticia, marcarLeida, borrar, index } = props;\n  return (\n    <div className=\"Noticia\" style={{ opacity: noticia.vista ? \"0.5\" : \"1\" }}>\n      <div className=\"media alert alert-primary my-4\">\n        <img\n          src={noticia.imagen}\n          style={{ width: \"350px\", borderRadius: \"15px\" }}\n          alt={noticia.title}\n        />\n        <div className=\"media-body ml-4\">\n          {/* ------------- */}\n          {/* Botón de leer */}\n          {/* ------------- */}\n          <button\n            className=\"btn btn-warning float-right\"\n            onClick={() => marcarLeida(noticia._id)}\n          >\n            <i className=\"fab fa-readme\"> Leida</i>\n          </button>\n\n          {/* --------------- */}\n          {/* Botón de borrar */}\n          {/* --------------- */}\n          <button\n            className=\"btn btn-danger float-left\"\n            onClick={() => borrar(noticia._id)}\n          >\n            <i className=\"far fa-trash-alt\"> Borrar</i>\n          </button>\n\n          {/* --------------------------- */}\n          {/* Represntación de la noticia */}\n          {/* --------------------------- */}\n          <h3 className=\"text-center font-italic text-uppercase\">\n            <u>Noticia Nro. {index + 1}</u>\n          </h3>\n          <br />\n          <h3>{noticia.titulo}</h3>\n          <p>\n            <i>{noticia.cuerpo}</i>\n          </p>\n          <p>\n            <b>{noticia.autor}</b>\n          </p>\n          <p>\n            <b>\n              <i>{noticia.email}</i>\n            </b>\n          </p>\n          <p>\n            <b>ID: </b>\n            <i>{noticia._id}</i>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Noticia;\n","import faker from \"faker\";\n\nfaker.locale = \"es\";\n\nconst generarNoticia = () => ({\n  titulo: faker.hacker.phrase(),\n  cuerpo: faker.lorem.paragraph(),\n  autor: faker.name.findName(),\n  imagen: faker.image.avatar(),\n  email: faker.internet.email(),\n  vista: false,\n});\n\nexport default generarNoticia;\n","import React from \"react\";\nimport Noticia from \"./Noticia\";\n\nimport axios from \"axios\";\n\nimport \"./Noticias.css\";\nimport generarNoticia from \"../generador\";\n\nconst URL_NOTICIAS =\n  (process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:8080\") +\n  \"/noticias/\";\n\nclass Noticias extends React.Component {\n  state = {\n    noticias: [],\n    idObtenerNoticia: \"\",\n    pedidas: false,\n  };\n\n  async componentDidMount() {\n    //this.obtenerNoticias()\n  }\n\n  /* ------------------------------- */\n  /*       GET noticia (query)       */\n  /* ------------------------------- */\n  async obtenerNoticias(_id) {\n    try {\n      let body = {\n        query: `\n                    query {\n                        noticias${_id ? '(_id: \"' + _id + '\")' : \"\"} {\n                            _id\n                            titulo\n                            cuerpo\n                            imagen\n                            email\n                            vista\n                        }\n                    }\n                `,\n        variables: {},\n      };\n      let options = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let response = await axios.post(URL_NOTICIAS, body, options);\n      let {\n        data: {\n          data: { noticias },\n        },\n      } = response;\n      this.setState({ noticias: noticias ? noticias : [] });\n    } catch (error) {\n      console.error(error);\n      this.setState({ noticias: [] });\n    }\n    this.setState({ pedidas: true, idObtenerNoticia: \"\" });\n  }\n\n  /* ------------------------------- */\n  /*     POST noticia (mutation)     */\n  /* ------------------------------- */\n  async incorporarNoticia() {\n    try {\n      let noticia = generarNoticia();\n\n      let body = {\n        query: `\n                    mutation guardarNoticia($titulo: String!,$cuerpo: String!,$autor: String!,$imagen: String!,$email: String!,$vista: Boolean!) {\n                        guardarNoticia( titulo: $titulo,cuerpo: $cuerpo, autor: $autor,imagen: $imagen, email: $email, vista: $vista){\n                            _id\n                            titulo\n                            cuerpo\n                            autor\n                            imagen\n                            email\n                            vista\n                        }\n                    }\n                `,\n        variables: noticia,\n      };\n      let options = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let response = await axios.post(URL_NOTICIAS, body, options);\n      let {\n        data: {\n          data: { guardarNoticia: noticiaIncorporada },\n        },\n      } = response;\n\n      //incorporo noticia en local\n      let noticias = [...this.state.noticias];\n      noticias.push(noticiaIncorporada);\n      this.setState({ noticias });\n    } catch (error) {\n      console.error(\"incorporarNoticia\", error);\n    }\n  }\n\n  /* ------------------------------- */\n  /*    UPDATE noticia (mutation)    */\n  /* ------------------------------- */\n  async actualizarComoLeida(_id) {\n    try {\n      let body = {\n        query: `\n                    mutation actualizarNoticia($_id: String!,$vista: Boolean!) {\n                        actualizarNoticia( _id: $_id, vista: $vista){\n                            _id\n                            titulo\n                            cuerpo\n                            autor\n                            imagen\n                            email\n                            vista\n                        }\n                    }\n                `,\n        variables: {\n          _id: _id,\n          vista: true,\n        },\n      };\n      let options = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let response = await axios.post(URL_NOTICIAS, body, options);\n      let {\n        data: {\n          data: { actualizarNoticia: noticiaActualizada },\n        },\n      } = response;\n      console.log(noticiaActualizada);\n\n      //actualizo noticia en local\n      let noticias = [...this.state.noticias];\n      noticias.find((noticia) => noticia._id === _id).vista = true;\n      this.setState({ noticias });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /* ------------------------------- */\n  /*    DELETE noticia (mutation)    */\n  /* ------------------------------- */\n  async borrarNoticia(_id) {\n    try {\n      let body = {\n        query: `\n                    mutation borrarNoticia($_id: String!) {\n                        borrarNoticia( _id: $_id){\n                            _id\n                            titulo\n                            cuerpo\n                            autor\n                            imagen\n                            email\n                            vista\n                        }\n                    }\n                `,\n        variables: {\n          _id: _id,\n        },\n      };\n      let options = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      let response = await axios.post(URL_NOTICIAS, body, options);\n      let {\n        data: {\n          data: { borrarNoticia: noticiaBorrada },\n        },\n      } = response;\n      console.log(noticiaBorrada);\n\n      //borro noticia en local\n      let noticias = [...this.state.noticias];\n      let index = noticias.findIndex((noticia) => noticia._id === _id);\n      noticias.splice(index, 1);\n      this.setState({ noticias });\n    } catch (error) {\n      console.error(\"borrarNoticia\", error);\n    }\n  }\n\n  render() {\n    let { noticias, idObtenerNoticia, pedidas } = this.state;\n    return (\n      <div className=\"Noticias\">\n        <div className=\"container mt-3\">\n          <div className=\"jumbotron\">\n            <h1>Mis Noticias - API GRAPHQL</h1>\n            <hr />\n\n            {/* ---------------- */}\n            {/* Obtener noticias */}\n            {/* ---------------- */}\n            <button\n              className=\"btn btn-info my-3 float-left\"\n              onClick={() => this.obtenerNoticias(idObtenerNoticia)}\n            >\n              <i className=\"fas fa-file-alt\"> Obtener</i>\n            </button>\n\n            <input\n              value={idObtenerNoticia}\n              className=\"mt-3 ml-1 form-control w-25 float-left\"\n              onChange={(e) =>\n                this.setState({ idObtenerNoticia: e.target.value })\n              }\n              placeholder=\"todas ó ingrese ID\"\n              type=\"text\"\n            />\n\n            {/* ------------- */}\n            {/* Crear noticia */}\n            {/* ------------- */}\n            <button\n              className=\"btn btn-success my-3 float-right\"\n              onClick={() => this.incorporarNoticia()}\n            >\n              <i className=\"fas fa-envelope-open-text\"> Generar</i>\n            </button>\n\n            <div className=\"clearfix\" />\n\n            {/* Cartel de no hay noticias */}\n            {!noticias.length && pedidas && (\n              <h3 className=\"alert alert-danger\">\n                No hay noticias para mostrar\n              </h3>\n            )}\n\n            {/* Representación de las noticias */}\n            {noticias.map((noticia, index) => {\n              return (\n                <Noticia\n                  noticia={noticia}\n                  index={index}\n                  marcarLeida={(_id) => this.actualizarComoLeida(_id)}\n                  borrar={(_id) => this.borrarNoticia(_id)}\n                  key={noticia._id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noticias;\n","import \"./App.css\";\nimport Noticias from \"./componentes/Noticias\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Noticias />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}